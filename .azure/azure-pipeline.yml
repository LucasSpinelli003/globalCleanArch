trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  dotnetVersion: '8.0.x'
  appServiceName: 'meuappservice' 
  resourceGroupName: 'energy'
  location: 'eastus'
  appServicePlanName: 'meuAppServicePlan'
  sku: 'B1' 

steps:
# Instalar o SDK do .NET
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: $(dotnetVersion)

# Restaurar dependências
- task: DotNetCoreCLI@2
  displayName: 'Restore dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

# Compilar o projeto
- task: DotNetCoreCLI@2
  displayName: 'Build the project'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'

# Publicar artefatos
- task: DotNetCoreCLI@2
  displayName: 'Publish project'
  inputs:
    command: 'publish'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    projects: '**/*.csproj'

# Criar o App Service (caso não exista)
- task: AzureCLI@2
  displayName: 'Create Azure App Service'
  inputs:
    azureSubscription: '<SEU-NOME-DA-CONEXÃO-AZURE>'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Criar o grupo de recursos (se não existir)
      az group create --name $(resourceGroupName) --location $(location)

      # Criar o App Service Plan (se não existir)
      az appservice plan create \
        --name $(appServicePlanName) \
        --resource-group $(resourceGroupName) \
        --sku $(sku) \
        --is-linux

      # Criar o Web App (se não existir)
      az webapp create \
        --name $(appServiceName) \
        --resource-group $(resourceGroupName) \
        --plan $(appServicePlanName)

# Deploy para o Azure App Service
- task: AzureWebApp@1
  displayName: 'Deploy to Azure App Service'
  inputs:
    azureSubscription: '<SEU-NOME-DA-CONEXÃO-AZURE>'
    appName: $(appServiceName)
    package: '$(Build.ArtifactStagingDirectory)/*.zip'
